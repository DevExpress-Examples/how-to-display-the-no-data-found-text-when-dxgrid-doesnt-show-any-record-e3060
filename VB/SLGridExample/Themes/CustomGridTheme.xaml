<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                     xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                     xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                     xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                     xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest;assembly=DevExpress.Xpf.Grid.v13.1"
                     xmlns:sys="clr-namespace:System;assembly=mscorlib"
                     xmlns:local="clr-namespace:SLGridExample"
                     >

    <SolidColorBrush x:Key="GridBackgroundBrush" Color="White" />

    <dxg:NewItemRowPositionToVisibilityConverter x:Key="NewItemRowPositionToVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <sys:Double x:Key="TableViewThemeKey_LeftDataAreaIndent">0</sys:Double>
    <sys:Double x:Key="TableViewThemeKey_RightDataAreaIndent">0</sys:Double>
    <sys:Double x:Key="TableViewThemeKey_LeftGroupAreaIndent">28</sys:Double>
    <sys:Double x:Key="TableViewThemeKey_RightGroupAreaIndent">0</sys:Double>
    <sys:Double x:Key="TableViewThemeKey_FixedLineWidth">3</sys:Double>
    <sys:Double x:Key="TableViewThemeKey_IndicatorWidth">27</sys:Double>
    <Thickness x:Key="TableViewThemeKey_Margin">0</Thickness>
    <Thickness x:Key="TableViewThemeKey_HorizontalScrollbarMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TableViewThemeKey_RowPresenterGridMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TableViewThemeKey_IndicatorMargin">0,0,0,0</Thickness>
    <SolidColorBrush x:Key="GridRowThemeKey_CellBorderNoneBrush" Color="Transparent" />
    <SolidColorBrush x:Key="GridRowThemeKey_CellBorderFocusedBrush" Color="#FFdbe9f9" />
    <SolidColorBrush x:Key="GridRowThemeKey_CellTextFocusedBrush" Color="#FF000000" />

    <!--Rows-->
    <SolidColorBrush x:Key="GroupGridRowBorderBrush" Color="#FFC6D7ED" />
    <SolidColorBrush x:Key="GroupGridRowHeaderTextBrush" Color="#FF464646" />
    <SolidColorBrush x:Key="DataRowTextBrush" Color="#FF000000" />
    <SolidColorBrush x:Key="GroupRowFocusedBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="GridRowThemeKey_GridDataRowDelimiterBrush" Color="#FFD3D3D3" />
    <SolidColorBrush x:Key="GridRowThemeKey_BorderNoneBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="GridRowThemeKey_BorderSelectedBrush" Color="#FFDBE9F9" />
    <Thickness x:Key="TableViewThemeKey_SearchPanelWithoutGroupedPanelMargin">10,12</Thickness>
    <Thickness x:Key="TableViewThemeKey_SearchPanelWithGroupedPanelMargin">10,12,10,4</Thickness>
    <SolidColorBrush x:Key="TableViewThemeKey_SearchPanelBorderBottomBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TableViewThemeKey_SearchPanelBackground" Color="Transparent" />
    <sys:Double x:Key="TableViewThemeKey_SearchPanelWidth">260</sys:Double>
    <LinearGradientBrush x:Key="GridRowThemeKey_BorderFocusedBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FF6DA2DE" />
        <GradientStop Color="#FF91B9E6" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GridRowThemeKey_TextFocusedBrush" Color="#FFFFFFFF" />
    <Thickness x:Key="GridRowThemeKey_RowOffsetThickness">0</Thickness>

    <ControlTemplate x:Key="TableViewThemeKey_DataPresenterTemplate" TargetType="dxg:DataPresenter">
        <Border Background="White">
            <ContentPresenter />
        </Border>
    </ControlTemplate>
    
    <Style x:Key="TableViewThemeKey_SearchPanelContentTemplate" TargetType="ContentControl">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{StaticResource TableViewThemeKey_SearchPanelBackground}">
                        <dxg:GridSearchControl x:Name="PART_SearchControl" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Width="{StaticResource TableViewThemeKey_SearchPanelWidth}" HorizontalAlignment="Left">
                            <dxg:GridSearchControl.Margin>
                                <Binding Path="GroupPanelShown" ElementName="PART_SearchControl">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter TrueValue="{StaticResource TableViewThemeKey_SearchPanelWithGroupedPanelMargin}" FalseValue="{StaticResource TableViewThemeKey_SearchPanelWithoutGroupedPanelMargin}" />
                                    </Binding.Converter>
                                </Binding>
                            </dxg:GridSearchControl.Margin>
                        </dxg:GridSearchControl>
                        <Border x:Name="PART_SearchPanelBorderBottom" BorderThickness="0,0,0,1" BorderBrush="{StaticResource TableViewThemeKey_SearchPanelBorderBottomBrush}">
                            <Border.Visibility>
                                <Binding Path="GroupPanelShown" ElementName="PART_SearchControl">
                                    <Binding.Converter>
                                        <dx:BoolToVisibilityInverseConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="GridRowThemeKey_FilterRowTemplate" TargetType="ContentControl">
        <Border Background="White" BorderBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" BorderThickness="0,0,0,1">
            <Grid>
                <Border x:Name="borderFocused" Margin="0" UseLayoutRounding="True" Background="{StaticResource GridRowThemeKey_BorderFocusedBrush}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.FadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentControl>
                    <ContentPresenter />
                </ContentControl>
            </Grid>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="GridRowThemeKey_AutoFilterRowItemTemplate">
        <dxg:FilterCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualAutoFilterRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" />
    </DataTemplate>

    <ControlTemplate x:Key="GridRowThemeKey_NewItemRowTemplate" TargetType="ContentControl">
        <Grid>
            <Border x:Name="rowDelimeterBorder" Background="White" BorderBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" BorderThickness="0,0,0,1">
                <Grid>
                    <Border x:Name="borderFocused" Margin="0" UseLayoutRounding="True" Background="{StaticResource GridRowThemeKey_BorderFocusedBrush}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.FadeSelectionOnLostFocus}">
                        <Border.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                </Binding.Converter>
                            </Binding>
                        </Border.Visibility>
                    </Border>
                    <ContentControl>
                        <ContentPresenter />
                    </ContentControl>
                    <Border x:Name="backgroundBorder" Background="#FFFFFFFF" IsHitTestVisible="False" Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}">
                        <dx:MeasurePixelSnapper>
                            <TextBlock Foreground="#FFA3A3A3" Margin="0,1,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PART_GridNewRowText">
                               <TextBlock.Text>
                                    <Binding Path="View.LocalizationDescriptor" ConverterParameter="GridNewRowText">
                                        <Binding.Converter>
                                            <dxg:DynamicLocalizationStringValueConvertor />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                            </TextBlock>
                        </dx:MeasurePixelSnapper>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="GridRowThemeKey_NewItemRowItemTemplate">
        <dxg:NewItemRowCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualNewItemRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" />
    </DataTemplate>

    <Style x:Key="ScrollBarThemeKey_ScrollingCornerStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="CornerRadius" Value="0,0,2,0" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusX="1" RadiusY="1">
                    <GradientStop Color="#FFEFEFEF" Offset="1" />
                    <GradientStop Color="#FFDEDEDE" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="TableViewThemeKey_ScrollViewerTemplate">
        <dxg:ScrollViewerContentDecorator View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid UseLayoutRounding="true">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dx:BestFitDecorator x:Name="PART_BestFitControlDecorator" Width="0" Height="0" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:BestFitControlDecoratorInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                </dx:BestFitDecorator>

                <dx:PopupContainer x:Name="PART_PopupContainerDecorator" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:PopupContainerDecoratorInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                </dx:PopupContainer>
                <dxg:GroupPanelControl x:Name="PART_GroupPanel" Grid.Row="1" Visibility="Collapsed" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                </dxg:GroupPanelControl>
                <dxgcore:AdditionalRowItemsControl Grid.Row="3" Margin="{StaticResource TableViewThemeKey_RowPresenterGridMargin}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:AutoFilterRowControl x:Name="PART_FilterRow" DataContext="{Binding Path=(dxg:GridControl.CurrentView).AutoFilterRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{StaticResource GridRowThemeKey_FilterRowTemplate}" ItemTemplate="{StaticResource GridRowThemeKey_AutoFilterRowItemTemplate}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowAutoFilterRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxg:NewItemRowControl x:Name="PART_NewItemRow" Visibility="Collapsed" DataContext="{Binding Path=(dxg:GridControl.CurrentView).NewItemRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{StaticResource GridRowThemeKey_NewItemRowTemplate}" ItemTemplate="{StaticResource GridRowThemeKey_NewItemRowItemTemplate}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:NewItemRowInitializer />
                        </dxg:GridControl.CurrentViewChangedListener>
                    </dxg:NewItemRowControl>
                </dxgcore:AdditionalRowItemsControl>
                <Border Width="1" HorizontalAlignment="Left" Grid.Row="3" Background="#FF6E6E6E" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <dx:DXDockPanel Grid.Row="4">
                    <ContentPresenter x:Name="PART_FootersPanel" dx:DXDockPanel.Dock="Bottom" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).FooterTemplate, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:TotalSummaryPanelTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ContentPresenter>
                    <Grid Margin="{StaticResource TableViewThemeKey_RowPresenterGridMargin}" x:Name="rowPresenterGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Margin="{StaticResource TableViewThemeKey_IndicatorMargin}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}">

                            </ContentControl>
                            <ScrollContentPresenter Grid.Row="1" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <dxgcore:FocusRectPresenter.IsVerticalScrollHost>True</dxgcore:FocusRectPresenter.IsVerticalScrollHost>

                                <ScrollContentPresenter.Name>ScrollContentPresenter</ScrollContentPresenter.Name>
                                <dxg:GridControl.CurrentViewChangedListener>
                                    <dxg:ScrollContentPresenterInitializer />
                                </dxg:GridControl.CurrentViewChangedListener>

                                <ScrollContentPresenter.Content>
                                    <dxg:DataPresenter x:Name="dataPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TableViewThemeKey_DataPresenterTemplate}">
                                    </dxg:DataPresenter>
                                </ScrollContentPresenter.Content>
                                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxght:DataAreaTableViewHitTestAcceptor />
                                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                            </ScrollContentPresenter>
                            <ContentControl Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                <ContentControl.Visibility>
                                    <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                                <dx:EnumToObjectConverter.Values>
                                                    <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </ContentControl.Visibility>
                                <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxg:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ContentControl>
                            <dxg:FixedGroupsAdorner Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ParentControl="{Binding Content, ElementName=dataPresenter}" FixedElements="{Binding Content.FixedElements, ElementName=dataPresenter}" />
                        </Grid>

                        <ScrollBar Grid.Column="1" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                            <ScrollBar.IsEnabled>
                                <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxg:ValidationErrorToIsEnabledConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ScrollBar.IsEnabled>

                            <ScrollBar.Name>VerticalScrollBar</ScrollBar.Name>

                            <dxg:GridControl.CurrentViewChangedListener>
                                <dxg:VerticalScrollBarBlendCustomizationExtension />
                            </dxg:GridControl.CurrentViewChangedListener>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ScrollBar>
                        <ScrollBar Grid.Row="1" Orientation="Horizontal" Margin="{StaticResource TableViewThemeKey_HorizontalScrollbarMargin}" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ScrollBar.IsEnabled>
                                <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxg:ValidationErrorToIsEnabledConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ScrollBar.IsEnabled>

                            <ScrollBar.Name>HorizontalScrollBar</ScrollBar.Name>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ScrollBar>
                        <Border Grid.Row="1" Grid.Column="1" x:Name="PART_HorizontalScrollCorner" Style="{StaticResource ScrollBarThemeKey_ScrollingCornerStyle}">
                        </Border>
                        <Grid Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                            <Path x:Name="LeftBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                            <Path x:Name="RightBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
                        </Grid>
                        <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Left" Grid.RowSpan="2" Grid.Row="0" Margin="0,0,0,3" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                        <Border BorderBrush="Transparent" BorderThickness="0,1,0,0" Margin="0,-1,0,0" Grid.Row="1" VerticalAlignment="Top" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </dx:DXDockPanel>
                <Grid x:Name="TopRoundCorners" IsHitTestVisible="False" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Top" RenderTransform="1,0,0,-1,0,1" RenderTransformOrigin="0.5,0.5" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                    <Path x:Name="LeftTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                    <Path x:Name="RightTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
                </Grid>
                <Border Background="#FF6E6E6E" Height="1" Margin="3,0,3,0" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Top" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Right" Grid.RowSpan="3" Grid.Row="2" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <Border BorderBrush="#FF6E6E6E" BorderThickness="1,0,1,1" Height="3" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Bottom" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />

                <ContentControl Grid.Row="0" x:Name="part_SearchControlContainer" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource TableViewThemeKey_SearchPanelContentTemplate}" />

                <ContentPresenter Name="PART_HeadersPanel" Grid.Row="2" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(dxg:GridControl.CurrentView).HeaderPanelMinHeight, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:HeadersPanelInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:ColumnHeaderPanelTableViewHitTestAcceptor />
                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>

                <dxg:OuterBorderElement Grid.Row="3" Grid.RowSpan="2" x:Name="outerBorder" ShowColumnHeaders="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />

                <dxg:FixedTotalSummaryContainerControl Grid.Row="5" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowFixedTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridPopupMenu.GridMenuType="FixedTotalSummary">
                </dxg:FixedTotalSummaryContainerControl>

                <dxg:FilterPanelContainer Grid.Row="6" x:Name="PART_FilterPanelContainer" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                <!--<dxg:FilterPanelControl Grid.Row="6" x:Name="PART_FilterPanel" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ActualShowFilterPanel, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->

                <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter" Grid.RowSpan="7" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                <TextBlock Name="EmptyGridMessage" Grid.Row="4" 
                           Foreground="Gray" Text="{Binding Path=(dxg:GridControl.CurrentView).(local:VisibleRowsCountHelper.EmptyGridMessage), RelativeSource={RelativeSource TemplatedParent}}"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding Path=(dxg:GridControl.CurrentView).(local:VisibleRowsCountHelper.HasVisibleRows), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}"
                           />
            </Grid>
        </dxg:ScrollViewerContentDecorator>
    </ControlTemplate>

    <ControlTemplate x:Key="TableViewThemeKey_ControlTemplate">
        <ScrollViewer x:Name="scr"
                      VerticalScrollBarVisibility="{Binding VerticalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                      HorizontalScrollBarVisibility="{Binding HorizontalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                      dxg:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                      Template="{StaticResource TableViewThemeKey_ScrollViewerTemplate}">

            <ScrollViewer.IsTabStop>False</ScrollViewer.IsTabStop>
        </ScrollViewer>
    </ControlTemplate>

</ResourceDictionary>
